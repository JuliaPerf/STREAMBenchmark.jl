stages:
  - test
  - coverage

julia/1.6:
  stage: test
  tags:
    - bauerc-noctua
  variables:
    SCHEDULER_PARAMETERS: "-A pc2-mitarbeiter -p short -t 00:15:00"
  only:
    - main
    - pushes
    - tags
    - external_pull_requests
  script:
    - export JULIA_NUM_THREADS=10
    - /bin/bash -l
    - module load lang/Julia/1.6.2-linux-x86_64
    - julia --color=yes --project=. -e 'using Pkg; Pkg.build(verbose=true); Pkg.test();'

julia/1.7.0-rc2:
  stage: test
  tags:
    - bauerc-noctua
  variables:
    SCHEDULER_PARAMETERS: "-A pc2-mitarbeiter -p short -t 00:15:00"
  only:
    - main
    - pushes
    - tags
    - external_pull_requests
  needs:
    job: julia/1.6
  script:
    - export JULIA_NUM_THREADS=10
    - wget https://julialang-s3.julialang.org/bin/linux/x64/1.7/julia-1.7.0-rc2-linux-x86_64.tar.gz
    - tar --strip-components=1 -xf julia-1.7.0-rc2-linux-x86_64.tar.gz
    - bin/julia --color=yes --project=. -e 'using Pkg; Pkg.build(verbose=true); Pkg.test();'
  allow_failure: true
  
# we don't really want to test the package here (it's fine if tests are failing)
julia/1.6-coverage:
  stage: coverage
  tags:
    - bauerc-noctua
  variables:
    SCHEDULER_PARAMETERS: "-A pc2-mitarbeiter -p short -t 00:15:00"
  only:
    - main
    - pushes
    - tags
    - external_pull_requests
  script:
    - export JULIA_NUM_THREADS=10
    - export STREAM_VECTOR_LENGTH=10
    - /bin/bash -l
    - module load lang/Julia/1.6.2-linux-x86_64
    - julia --color=yes --project=. -e 'using Pkg; Pkg.build(verbose=true); Pkg.test(; coverage = true);'
    - julia --color=yes --project=test/coverage -e 'import Pkg; Pkg.instantiate()'
    - julia --color=yes --project=test/coverage test/coverage/coverage.jl
  allow_failure: true
